var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "dotenv", "./config"], factory);
    }
})(function (require, exports) {
    "use strict";
    var __syncRequire = typeof module === "object" && typeof module.exports === "object";
    Object.defineProperty(exports, "__esModule", { value: true });
    const dotenv_1 = __importDefault(require("dotenv"));
    const config_1 = __importDefault(require("./config"));
    async function init() {
        try {
            await config_1.default.loadConfigs();
        }
        catch (e) {
            console.log(e);
        }
        let path = config_1.default.getEnvPath();
        dotenv_1.default.config({
            path
        });
        (await (__syncRequire ? Promise.resolve().then(() => __importStar(require("./commander"))) : new Promise((resolve_1, reject_1) => { require(["./commander"], resolve_1, reject_1); }).then(__importStar))).initCommands();
    }
    exports.init = init;
});
