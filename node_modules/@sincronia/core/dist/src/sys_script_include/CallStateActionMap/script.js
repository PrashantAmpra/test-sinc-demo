"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CallStateActionMap = /*#__PURE__*/function () {
  function CallStateActionMap(callId) {
    _classCallCheck(this, CallStateActionMap);

    _defineProperty(this, "callId", void 0);

    _defineProperty(this, "actionsMap", void 0);

    this.callId = callId; // maps the state to the correct ui action sys_id

    this.actionsMap = {
      1: '8125bcf0db00c01036e88c6a6896199f',
      '-5': '8125bcf0db00c01036e88c6a6896199f',
      2: '8125bcf0db00c01036e88c6a6896199f',
      5: '8a276f2e1ba94890bf9a542d1e4bcba4',
      30: '',
      3: '2dd5d3eb1b65401030761f4ead4bcb91'
    };
  }

  _createClass(CallStateActionMap, [{
    key: "setAction",
    value: function setAction() {
      var callGr = new GlideRecord('x_nuvo_csd_call');
      callGr.addQuery('sys_id', this.callId);
      callGr.query();
      var validCall = callGr.next();

      if (!validCall) {
        return;
      }

      var curState = callGr.getValue('state');

      if (!curState) {
        callGr.setValue('actions', '');
        return;
      }

      callGr.setValue('actions', this.actionsMap[curState]);
      callGr.update();
    }
  }, {
    key: "showCreateWorkOrder",
    value: function showCreateWorkOrder() {
      var callGr = new GlideRecord('x_nuvo_csd_call');
      var validCall = callGr.get(this.callId);

      if (!validCall) {
        return false;
      }

      var curState = callGr.getValue('state');
      var noType = callGr.getValue('work_order_type') === null;

      if (!curState || noType) {
        return false;
      }

      var validState = curState === '1' || curState === '-5' || curState === '2';

      if (validState) {
        return true;
      }

      return false;
    }
  }, {
    key: "showDispatch",
    value: function showDispatch() {
      var callGr = new GlideRecord('x_nuvo_csd_call');
      var validCall = callGr.get(this.callId);

      if (!validCall) {
        return false;
      }

      var curState = callGr.getValue('state');
      var actionId = '8a276f2e1ba94890bf9a542d1e4bcba4';

      if (!curState || callGr.getValue('work_order') == null) {
        return false;
      }

      if (this.actionsMap[curState] === actionId) {
        return true;
      }

      return false;
    }
  }, {
    key: "showReopen",
    value: function showReopen() {
      var callGr = new GlideRecord('x_nuvo_csd_call');
      var validCall = callGr.get(this.callId);

      if (!validCall) {
        return false;
      }

      var curState = callGr.getValue('state');
      var actionId = '2dd5d3eb1b65401030761f4ead4bcb91';

      if (!curState || callGr.getValue('work_order') == null) {
        return false;
      }

      if (this.actionsMap[curState] === actionId) {
        return true;
      }

      return false;
    }
  }]);

  return CallStateActionMap;
}();