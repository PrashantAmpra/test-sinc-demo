(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const reservedWords = {
        abstract: true,
        boolean: true,
        break: true,
        byte: true,
        case: true,
        catch: true,
        char: true,
        class: true,
        const: true,
        continue: true,
        default: true,
        do: true,
        double: true,
        else: true,
        enum: true,
        extends: true,
        false: true,
        final: true,
        finally: true,
        float: true,
        for: true,
        goto: true,
        if: true,
        implements: true,
        import: true,
        instanceof: true,
        int: true,
        interface: true,
        long: true,
        native: true,
        new: true,
        null: true,
        package: true,
        private: true,
        protected: true,
        public: true,
        return: true,
        short: true,
        static: true,
        super: true,
        switch: true,
        synchronized: true,
        this: true,
        throw: true,
        throws: true,
        transient: true,
        true: true,
        try: true,
        var: true,
        void: true,
        volatile: true,
        while: true
    };
    function isReservedWord(word) {
        return reservedWords.hasOwnProperty(word);
    }
    exports.isReservedWord = isReservedWord;
});
